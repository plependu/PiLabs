<!DOCTYPE html>
<html lang="en" dir="ltr">
    <!-- Include <head> -->
    <%- include('../partials/head') %>
    <body>
        <!-- Page Wrapper Start -->
        <div class="page-wrapper chiller-theme toggled">

            <!-- Include Sidebar -->
            <%- include('../partials/sidebar') %>

            <!-- Main Page Content Start -->
            <main class="page-content">
                <!-- Content Container Start -->
                <div class="container">
                    <!-- Title of Page -->
                    <h2> Tagger user documentation </h2>
                    <hr>

                    <p>
                    This API provides a service to extract medical information from electronic health records (EHRs).
                    </p>

                    <h4>Requirements</h4>
                    <ul>
                      <li>python 3</li>
                      <li>python-unitex</li>
                      <li>Flask (pip install flask)</li>
                      <li>flask-restful (pip install flask-restful)</li>
                    </ul>

                    <h4>To start the API</h4>
                    <p>
                      Follow the steps in <kbd>tagger-api/Resources/Dictionaries/README.md</kbd> to setup the dictionaries this API uses.<br>
                      cd into the tagger-api directory<br>
                      execute python ./start_api.py<br>
                      The default API port can be configured in the tagger-api/start_api.py file.<br>
                    </p>

                    To make requests of the API
                    <p>
                    The API provides two main functionalities; terms and ehrs.
                    </p>

                    Terms
                    <p>
                    terms functionality is accessible through a GET request to the following URL<br>
                    URL : http://localhost:8020/ehrp-api/v1/terms
                    </p>

                    Parameters
                    Required:
                    Name: 'term'
                    Type: string
                    Description: This should be the term you want to lookup.
                    Example request:
                    GET: http://localhost:8020/ehrp-api/v1/terms?term=headache
                    Response:
                    [
                    {
                      'instances': [
                      {'cui': '10020772', 'onto': 'ICD10', 'term': 'headache'}
                      ],
                      'name': 'lookup'
                    }
                    ]

                    Extract
                    <p>
                    ehrs functionality is accessible through a POST request to the following URL<br>
                    URL : http://localhost:8020/ehrp-api/v1/ehrs
                    </p>

                    Parameters
                    Optional:
                    Name: 'text'
                    Type: string or list of strings
                    Description: This should be the text(s) you want to process. Multiple texts can be specified, all using 'text' as a parameter name.
                    NOTE: Exactly one of 'text' and 'file' can be used in the same request. If both are used, or neither are used, a 422 error response will be returned.
                    Name: 'types'
                    Type: string, or list of strings
                    Description: This parameter specifies which type(s) of medical data you want to be extracted from the text. Multiple types can be specified, all using 'types' as a parameter name.
                    Example using the python requests library:
                    args = {
                      'text': [medical_text_string1, medical_text_string2],
                      'types': 'drug'
                    }
                    response = requests.post('http://localhost:8020/ehrp-api/v1/ehrs', data=args)
                    Possible values for 'types':
                    'drug': Looks for drug names
                    'disorder': Looks for disorder names
                    'device': Looks for device names
                    'procedure': Looks for procedure names
                    If 'types' is not specified, all types will be used.
                    If multiple types are desired, it is faster to not specify any, and just extract the desired information from the returned results
                    Name: 'file'
                    Type: file object
                    Description: Allows a text file to be uploaded in place of the 'text' parameter.
                    NOTE: The file is expected to have one EHR per line.
                    NOTE: Exactly one of 'text' and 'file' can be used in the same request. If both are used, or neither are used, a 422 error response will be returned.
                    Example using the python requests library:
                    args = {
                      'types': ['drug', 'disorder']
                    }
                    text_file = open('medical_text_path', 'rb')
                    response = requests.post('http://localhost:8020/ehrp-api/v1/ehrs', data=args, files={'file': text_file))
                    Both GET and POST requests return JSON objects.

                    Error response codes
                    <ul>
                    <li>400: Malformed url; check your base url and parameter names to see if they conform to the descriptions above.</li>
                    <li>
                      <ul>422: Two possible reasons:
                        <li>'types' parameter has unknown value; check the value(s) you are using for 'types', make sure it is one of the allowable types listed above.</li>
                        <li>In a POST request to the ehrs functionality, either both 'text' and 'file' have been specified, or neither have been specified.</li>
                      </ul>
                    </ul>

                    <!-- Include Footer -->
                    <%- include('../partials/footer') %>

                </div>
                <!-- Content Container End -->

            </main>
            <!-- Main Page Content End -->


        </div>
        <!-- Page Wrapper End -->

        <!-- Include Scripts -->
        <%- include('../partials/scripts') %>

    </body>
</html>
